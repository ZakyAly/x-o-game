{"version":3,"sources":["Components/Logo/joystick.png","Components/Logo/Logo.js","Components/Square/Square.js","Components/Board/Board.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","options","max","style","height","width","paddingTop","alt","src","joystick","Square","props","onClick","onClickEvent","value","Board","initialSquares","Array","fill","useState","squares","setSquares","xIsNext","setXIsNext","renderSquare","i","newSquares","winnnerDeclared","Boolean","calculateWinner","squareFilled","handleClickEvent","winner","status","line","a","b","c","Game","particlesOptions","particles","number","density","enable","value_area","App","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAe,MAA0B,qCC0B1BA,G,OArBF,WACX,OACE,qBAAKC,UAAU,WAAf,SACE,cAAC,IAAD,CACEA,UAAU,qBACVC,QAAS,CAAEC,IAAK,KAChBC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAH/B,SAKE,qBAAKL,UAAU,iBAAf,SACE,qBACEA,UAAU,WACVG,MAAO,CAAEG,WAAY,OACrBC,IAAI,OACJC,IAAKC,Y,gBCPFC,G,OARA,SAACC,GACd,OACE,wBAAQX,UAAU,SAASY,QAASD,EAAME,aAA1C,SACGF,EAAMG,UC4EEC,G,OA9ED,WACZ,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MADnB,EAEYC,mBAASH,GAFrB,mBAEXI,EAFW,KAEFC,EAFE,OAGYF,oBAAS,GAHrB,mBAGXG,EAHW,KAGFC,EAHE,KAmBZC,EAAe,SAACC,GACpB,OACE,cAAC,EAAD,CAAQX,MAAOM,EAAQK,GAAIZ,aAAc,kBAhBpB,SAACY,GACxB,IAAMC,EAAU,YAAON,GAEjBO,EAAkBC,QAAQC,EAAgBH,IAC1CI,EAAeF,QAAQF,EAAWD,IACpCE,GAAmBG,IAIvBJ,EAAWD,GAAKH,EAAU,IAAM,IAChCD,EAAWK,GACXH,GAAYD,IAKqCS,CAAiBN,OAI9DO,EAASH,EAAgBT,GAEzBa,EAASD,EAAM,kBACNA,GADM,mBAELV,EAAU,IAAM,KAEhC,OACE,gCACE,sBAAKtB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKxB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKxB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,qBAAKxB,UAAU,SAAf,SAAyBiC,OAG7B,SAASJ,EAAgBT,GAWvB,IAVA,IAUA,MAVc,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,eAAwB,CAAnB,IAAIc,EAAI,KAAW,cACJA,EADI,GACfC,EADe,KACZC,EADY,KACTC,EADS,KAGtB,GACEjB,EAAQe,IACRf,EAAQe,KAAOf,EAAQgB,IACvBhB,EAAQe,KAAOf,EAAQiB,GAEvB,OAAOjB,EAAQe,GAInB,OAAO,QC/DIG,G,OAXF,WACX,OACE,sBAAKtC,UAAU,OAAf,UACE,0DACA,uCACA,qDACA,cAAC,EAAD,SCJAuC,G,OAAmB,CACvBC,UAAW,CACTC,OAAQ,CACN3B,MAAO,EACP4B,QAAS,CACPC,QAAQ,EACRC,WAAY,SAgBLC,MAXf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAWA,UAAU,YAAY8C,OAAQP,IACzC,cAAC,EAAD,QCXSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5ce4b4e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/joystick.d3cd6ab8.png\";","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport joystick from \"./joystick.png\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0 \">\n      <Tilt\n        className=\"Tilt br2 shadow-5 \"\n        options={{ max: 100 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img\n            className=\"App-logo\"\n            style={{ paddingTop: \"5px\" }}\n            alt=\"logo\"\n            src={joystick}\n          />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport \"./Square.css\";\n\nconst Square = (props) => {\n  return (\n    <button className=\"square\" onClick={props.onClickEvent}>\n      {props.value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React, { useState } from \"react\";\nimport Square from \"../Square/Square\";\nimport \"./Board.css\";\n\nconst Board = () => {\n  const initialSquares = Array(9).fill(null);\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n\n  const handleClickEvent = (i) => {\n    const newSquares = [...squares];\n\n    const winnnerDeclared = Boolean(calculateWinner(newSquares));\n    const squareFilled = Boolean(newSquares[i]);\n    if (winnnerDeclared || squareFilled) {\n      return;\n    }\n\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n\n  const renderSquare = (i) => {\n    return (\n      <Square value={squares[i]} onClickEvent={() => handleClickEvent(i)} />\n    );\n  };\n\n  const winner = calculateWinner(squares);\n\n  const status = winner\n    ? `Winner: ${winner}`\n    : `Player : ${xIsNext ? \"1\" : \"2\"}`;\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div className=\"status\">{status}</div>\n    </div>\n  );\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let line of lines) {\n      const [a, b, c] = line;\n\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n};\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"../Board/Board\";\nimport \"./Game.css\";\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <div>Ready to play a game..!</div>\n      <h1>X - O</h1>\n      <p>Player 1 vs Player 2</p>\n      <Board />\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Logo from \"./Components/Logo/Logo\";\nimport Game from \"./Components/Game/Game\";\nimport \"./App.css\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 8,\n      density: {\n        enable: true,\n        value_area: 500,\n      },\n    },\n  },\n};\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Logo />\n\n      <Particles className=\"particles\" params={particlesOptions} />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}